name: Release

on:
  push:
    tags:
      - "*"

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows-forwarder-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal
      - run: cargo install cross
      - uses: Swatinem/rust-cache@v2
        with:
          key: "release-windows-bin"
      - name: Build windows forwarder release
        run: cross build --release --target x86_64-pc-windows-gnu --bin forwarder
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/x86_64-pc-windows-gnu/release/forwarder.exe
  build-linux-forwarder-binary:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
        with:
          key: "release-linux-bin"
      - name: Build linux forwarder release
        run: cargo build --release --bin forwarder
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/release/forwarder
  # TODO: macos forwarder.app?

  build-receiver-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: log in to ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: 413471642455.dkr.ecr.us-east-1.amazonaws.com
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            413471642455.dkr.ecr.us-east-1.amazonaws.com/spotify-remote-receiver
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
